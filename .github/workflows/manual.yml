name: Test Setup

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/test-setup.yml"

permissions:
  id-token: write
  contents: read
  actions: read

defaults:
  run:
    working-directory: ./terraform

jobs:
  test-setup:
    name: "Test OIDC & Terraform Setup"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Test 1: OIDC Authentication
      - name: "✅ Test 1: Configure AWS credentials via OIDC"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ secrets.ROLE_ARN }}"
          role-session-name: github-actions-test-session
          aws-region: eu-west-2

      # Test 2: Verify AWS Identity
      - name: "✅ Test 2: Verify AWS Identity"
        run: |
          echo "=== AWS Identity Check ==="
          aws sts get-caller-identity
          echo ""
          echo "Assumed Role ARN: $(aws sts get-caller-identity --query 'Arn' --output text)"
          echo "Account ID: $(aws sts get-caller-identity --query 'Account' --output text)"
          echo "User ID: $(aws sts get-caller-identity --query 'UserId' --output text)"

      # Test 3: Test AWS Permissions
      - name: "✅ Test 3: Test AWS Permissions"
        run: |
          echo "=== Testing AWS Permissions ==="
          echo "Testing S3 access (for Terraform backend)..."
          aws s3 ls s3://proj-eks-tfstate/ || echo "❌ Cannot access S3 backend bucket"
          
          echo "Testing EC2 permissions..."
          aws ec2 describe-regions --region eu-west-2 --output table
          
          echo "Testing EKS permissions..."
          aws eks list-clusters --region eu-west-2 || echo "No EKS clusters found (expected)"
          
          echo "Testing IAM permissions..."
          aws iam get-role --role-name Admin --output table || echo "Cannot access IAM role details"

      # Test 4: Terraform Setup
      - name: "✅ Test 4: Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      # Test 5: Terraform Version Check
      - name: "✅ Test 5: Terraform Version Check"
        run: |
          echo "=== Terraform Version ==="
          terraform version

      # Test 6: Terraform Init (Backend Test)
      - name: "✅ Test 6: Terraform Init (Backend Test)"
        run: |
          echo "=== Testing Terraform Backend ==="
          terraform init -input=false
          echo "✅ Terraform init successful - backend connection works!"

      # Test 7: Terraform Validate
      - name: "✅ Test 7: Terraform Validate"
        run: |
          echo "=== Validating Terraform Configuration ==="
          terraform validate
          echo "✅ Terraform configuration is valid!"

      # Test 8: Terraform Format Check
      - name: "✅ Test 8: Terraform Format Check"
        run: |
          echo "=== Checking Terraform Formatting ==="
          terraform fmt -check -diff
          echo "✅ Terraform formatting is correct!"

      # Test 9: Terraform Plan (Dry Run)
      - name: "✅ Test 9: Terraform Plan (Dry Run)"
        run: |
          echo "=== Testing Terraform Plan ==="
          terraform plan -input=false -no-color
          echo "✅ Terraform plan completed successfully!"

      # Test 10: Provider Version Check
      - name: "✅ Test 10: Provider Version Check"
        run: |
          echo "=== Terraform Providers ==="
          terraform providers
          echo ""
          echo "=== Provider Lock File ==="
          cat .terraform.lock.hcl | head -20

      # Test 11: Test ECR Access (for your build workflow)
      - name: "✅ Test 11: Test ECR Access"
        run: |
          echo "=== Testing ECR Access ==="
          aws ecr get-authorization-token --region eu-west-2 > /dev/null
          echo "✅ ECR authentication successful!"
          
          echo "Checking ECR repositories..."
          aws ecr describe-repositories --region eu-west-2 --output table || echo "No ECR repositories found"

      # Test 12: Final Summary
      - name: "✅ Test 12: Summary"
        run: |
          echo "🎉 ================================="
          echo "🎉 ALL TESTS PASSED SUCCESSFULLY!"
          echo "🎉 ================================="
          echo ""
          echo "✅ OIDC Authentication: Working"
          echo "✅ AWS Permissions: Working" 
          echo "✅ Terraform Setup: Working"
          echo "✅ S3 Backend: Working"
          echo "✅ Configuration: Valid"
          echo "✅ ECR Access: Working"
          echo ""
          echo "Your setup is ready for:"
          echo "  - Terraform deployments"
          echo "  - EKS cluster creation" 
          echo "  - ECR image pushes"
          echo ""
          echo "Next step: Run your main apply workflow!"

      # Test 13: Optional - Test Specific AWS Services
      - name: "✅ Test 13: Test Key AWS Services for EKS"
        run: |
          echo "=== Testing EKS-specific AWS Services ==="
          
          echo "Testing VPC permissions..."
          aws ec2 describe-vpcs --region eu-west-2 --max-items 1 > /dev/null
          echo "✅ VPC access: OK"
          
          echo "Testing IAM permissions..."
          aws iam list-roles --max-items 1 > /dev/null
          echo "✅ IAM access: OK"
          
          echo "Testing KMS permissions..."
          aws kms list-keys --region eu-west-2 --limit 1 > /dev/null
          echo "✅ KMS access: OK"
          
          echo "Testing Auto Scaling permissions..."
          aws autoscaling describe-auto-scaling-groups --region eu-west-2 --max-items 1 > /dev/null
          echo "✅ Auto Scaling access: OK"
          
          echo "All AWS services needed for EKS are accessible! 🚀"
